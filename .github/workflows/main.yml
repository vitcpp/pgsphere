name: Build and Check

on:
  push:
  pull_request:

jobs:

  build_and_test:
    strategy:
      matrix:
        pg_version: [10, 11, 12, 13, 14, 15, 16]
        use_healpix: [0]

    name: PostgreSQL ${{ matrix.pg_version }} - USE_HEALPIX=${{ matrix.use_healpix }}
    runs-on: ubuntu-latest

    steps:
    - name: Apt update
      run: sudo apt update

    - name: Apt install dependencies
      run: |
        sudo apt -y install \
          postgresql-common \
          libhealpix-cxx-dev \
          docbook-dsssl \
          docbook-xml \
          openjade

    - name: Install Postgres
      run: sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -p -v ${{ matrix.pg_version }} -i

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set MAKE_CMD variable
      run: echo "MAKE_CMD='make --keep-going -j$(nproc) -l$(nproc) -O'" >> $GITHUB_ENV

    - name: Build pgSphere
      run: ${MAKE_CMD} PROFILE="-Werror" USE_HEALPIX=${{ matrix.use_healpix }}

    - name: Install pgSphere
      run: sudo ${MAKE_CMD} USE_HEALPIX=${{ matrix.use_healpix }} install

    - name: make installcheck
      run: pg_virtualenv ${MAKE_CMD} USE_HEALPIX=${{ matrix.use_healpix }} installcheck

    - name: make test
      run: pg_virtualenv ${MAKE_CMD} USE_HEALPIX=${{ matrix.use_healpix }} test

    - name: make crushtest
      run: pg_virtualenv ${MAKE_CMD} USE_HEALPIX=${{ matrix.use_healpix }} crushtest

    - name: Build docs
      run: ${MAKE_CMD} -C doc

    - name: Install docs
      run: sudo ${MAKE_CMD} -C doc install

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
        name: ${{ github.ref_name }}-pg${{ matrix.pg_version }}-use-healpix-${{ matrix.use_healpix }}-${{ github.run_id }}
        if-no-files-found: ignore
        path: |
          ./**/*.log
          ./**/*.diffs
